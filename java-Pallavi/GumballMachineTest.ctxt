#BlueJ class context
comment0.params=
comment0.target=GumballMachineTest()
comment0.text=\r\n\ Default\ constructor\ for\ test\ class\ GumballMachineTest\r\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment10.params=
comment10.target=void\ testTakeGumballAndCrankAgainWithoutInsertingAnyCoinQQ()
comment11.params=
comment11.target=void\ testTakeGumballAndCrankAgainWithoutInsertingAnyCoinQDDN()
comment12.params=
comment12.target=void\ testTakeGumballAndCrankAgainWithoutInsertingAnyCoinQDNNN()
comment13.params=
comment13.target=void\ testTakeGumballAndCrankAgainWithoutInsertingAnyCoinQNNNNN()
comment14.params=
comment14.target=void\ testFiftyPlusFirst()
comment15.params=
comment15.target=void\ testFiftyPlusSecond()
comment16.params=
comment16.target=void\ testFinalCoinValue()
comment17.params=
comment17.target=void\ testCountOfGumballsInSlot()
comment18.params=
comment18.target=void\ testAddOneQuarterNeg()
comment19.params=
comment19.target=void\ testAddQQDneg()
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testGumballCount()
comment21.params=
comment21.target=void\ testReleaseBallMethod()
comment22.params=
comment22.target=void\ testEjectAndCentsBackCheck()
comment23.params=
comment23.target=void\ TestQDDDDEjectQNegative()
comment24.params=
comment24.target=void\ testGetDNQNoFiftyCentsState()
comment3.params=
comment3.target=void\ testQQHappy()
comment4.params=
comment4.target=void\ testQDDNHappy()
comment5.params=
comment5.target=void\ testQDNNNHappy()
comment6.params=
comment6.target=void\ testQNNNNNHappy()
comment7.params=
comment7.target=void\ testNoFiftyCentsToHasFiftyCentsStateTransition()
comment8.params=
comment8.target=void\ testGumballInSlotInTheBeginning()
comment8.text=\ @Test\r\n\ \ \ \ public\ void\ testHasFiftyCentsToSoldState()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ gumballM1.insertQuarter();\r\n\ \ \ \ \ \ \ \ gumballM1.insertQuarter();\r\n\ \ \ \ \ \ \ \ gumballM1.turnCrank();\r\n\ \ \ \ \ \ \ \ boolean\ isSoldState\ \=\ false;\r\n\ \ \ \ \ \ \ \ if\ (gumballM1.getState()\ instanceof\ SoldState)\r\n\ \ \ \ \ \ \ \ \ \ \ \ isSoldState\ \=\ true;\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ assertEquals(true,\ isSoldState);\r\n\ \ \ \ \r\n}
comment9.params=
comment9.target=void\ testCrankWithoutInsertingAnyCoin()
numComments=25
